name: Lint

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  super-linter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Super-Linter
        uses: super-linter/super-linter/slim@v6
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          FILTER_REGEX_EXCLUDE: ^_site/.*

  htmlhint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Run HTMLHint
        run: |
          FILES="$(git ls-files '*.html' | grep -v '^_site/' || true)"
          if [ -n "$FILES" ]; then
            readarray -t HTML_FILES <<< "$FILES"
            npx --yes htmlhint --config .htmlhintrc "${HTML_FILES[@]}"
          else
            echo "No HTML files to lint."
          fi

  markdownlint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run Markdownlint
        run: npm run lint:md

  yaml-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run YAML Lint
        run: npm run lint:yaml

  json-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run JSON Lint
        run: npm run lint:json

  shell-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Run Shell Lint
        run: npm run lint:shell

  build-assets:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Build assets
        run: npm run minify

      - name: Check if optimized-bundle.min.js exists
        run: |
          if [ ! -f "js/optimized-bundle.min.js" ]; then
            echo "ERROR: optimized-bundle.min.js was not created during build"
            exit 1
          fi
          echo "âœ… optimized-bundle.min.js created successfully"
